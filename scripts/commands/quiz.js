const fs = require("fs");
const path = require("path");

const questions = JSON.parse(fs.readFileSync(path.join(__dirname, "../../data/questions.json")));

let quizSession = {}; // userId ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶ï‡ßÅ‡¶á‡¶ú ‡¶∏‡ßá‡¶∂‡¶®

module.exports.config = {
  name: "quiz",
  version: "1.0",
  author: "Naim",
  cooldowns: 5,
  role: 0,
  shortDescription: {
    en: "Start a quiz!"
  },
  longDescription: {
    en: "Start an interactive quiz with timer."
  },
  category: "fun",
  guide: {
    en: ".quiz"
  }
};

module.exports.run = async function({ api, event }) {
  const userId = event.senderID;
  const threadId = event.threadID;

  if (quizSession[userId]) {
    return api.sendMessage("‚ùó‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶á‡¶§‡ßã‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá‡¶á ‡¶ï‡ßÅ‡¶á‡¶ú‡ßá ‡¶Ü‡¶õ‡ßã! ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡¶æ‡¶ì A/B/C/D ‡¶¶‡¶ø‡ßü‡ßá‡•§", threadId);
  }

  quizSession[userId] = {
    current: 0,
    score: 0
  };

  sendQuestion(api, threadId, userId);
};

function sendQuestion(api, threadId, userId) {
  const session = quizSession[userId];
  const question = questions[session.current];

  if (!question) {
    api.sendMessage(`üéâ ‡¶ï‡ßÅ‡¶á‡¶ú ‡¶∂‡ßá‡¶∑! ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡ßç‡¶ï‡ßã‡¶∞: ${session.score}/${questions.length}`, threadId);
    delete quizSession[userId];
    return;
  }

  let msg = `üìç ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ${session.current + 1}: ${question.question}\n\n`;
  for (const [key, val] of Object.entries(question.options)) {
    msg += `${key}. ${val}\n`;
  }
  msg += "\n‚è≥ ‡ßß‡ß¶ ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡¶ø‡¶® (A/B/C/D)";

  api.sendMessage(msg, threadId);

  session.timeout = setTimeout(() => {
    if (quizSession[userId]) {
      api.sendMessage("‚è∞ ‡¶∏‡¶Æ‡ßü ‡¶∂‡ßá‡¶∑! ‡¶™‡¶∞‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®‡ßá ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡¶ø...", threadId);
      session.current++;
      sendQuestion(api, threadId, userId);
    }
  }, 10000);
}

// ‚úÖ ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶ß‡¶∞‡¶æ‡¶∞ ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
module.exports.handleReply = async function({ api, event }) {
  const userId = event.senderID;
  const threadId = event.threadID;
  const answer = event.body.trim().toUpperCase();

  if (!quizSession[userId]) return;

  const session = quizSession[userId];
  const currentIndex = session.current - 1;
  const correctAnswer = questions[currentIndex].answer;

  clearTimeout(session.timeout);

  if (answer === correctAnswer) {
    api.sendMessage("‚úÖ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞!", threadId);
    session.score++;
  } else {
    api.sendMessage(`‚ùå ‡¶≠‡ßÅ‡¶≤! ‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞: ${correctAnswer}`, threadId);
  }

  session.current++;
  sendQuestion(api, threadId, userId);
};
